service: dynamodb-crud-api-leads

provider: 
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: us-east-2
  environment:
    DYNAMODB_TABLE_NAME: ${self:custom.leadsTableName}
  iamRoleStatements:
    -  Effect: "Allow"
       Action:
         - "dynamodb:Scan"
       Resource: "arn:aws:dynamodb:us-east-2:615656947034:table/leads-table-dev"

custom:
  leadsTableName: leads-table-${self:provider.stage}

plugin:
  - serverless-iam-roles-per-function

functions:
  getAllLeads:
      handler: api.getAllLeads
      name: get-all-leads
      memorySize: 128 # mb
      timeout: 5 # seconds
      events:
        - http:
            path: leads
            method: GET
      iamRoleStatements:
        - Effect: "Allow"
          Action:
            - "dynamodb:Scan"
          Resource: !GetAtt LeadsTable.Arn
  createPost:
    handler: api.createLead
    name: create-lead
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: post
          method: POST
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:PutItem"
        Resource: !GetAtt LeadsTable.Arn

resources:
  Resources:
    LeadsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.leadsTableName}
        AttributeDefinitions:
          - AttributeName: leadId
            AttributeType: S
        KeySchema:
          - AttributeName: leadId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
